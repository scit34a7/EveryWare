<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 회의실 관련 SQL -->
<mapper namespace="com.a7.everyware.meeting.dao.MeetingMapper">
	<!-- 개설된 회의실 개설  -->
	<insert id="createRoom" parameterType="MeetingVO">
	insert into meet_tb (
		meet_id
		, user_id
		, meet_date
		, meet_etposition
		, meet_maxpeople
		, meet_dept
		, meet_title
		
	)
	values (
		meet_id_seq.nextval
		, #{user_id}
		, to_date(#{meet_date}, 'yyyy/mm/dd hh24:mi')
		, #{meet_etposition}
		, #{meet_maxpeople}
		, #{meet_dept}
		, #{meet_title}
	)
	</insert>	
	
	<!-- 개설된 회의실 목록  -->
	<select id="searchAllList" resultType="MeetingVO">
		select * from meet_tb 
	</select>
	
	<!-- 회의실 정보 -->
	<select id="findRoom" parameterType="String" resultType="MeetingVO">
		select * from meet_tb where user_id = #{user_id}
	</select>
	
	<!-- 로그 저장 -->
	<insert id="saveLog" parameterType="MeetingLogVO">
	insert into meetlog_tb (
		log_id
		, user_id
		, log_content
		, log_time
		, meet_title
		
	)
	values (
		log_id_seq.nextval
		, #{user_id}
		, #{log_content}
		, to_date(#{log_time}, 'yyyy/mm/dd hh24:mi:ss')
		, #{meet_title}
	)
	</insert>	
	
	<!-- 회의실 삭제 -->
	<delete id="removeRoom" parameterType="MeetingVO">
		delete from meet_tb where user_id = #{user_id}
	</delete>
	
	<!-- 회의록 리스트. -->
	<select id="searchLogList" resultType="MeetingLogVO">
		select distinct meet_title, log_id, log_time from meetlog_tb order by log_id desc
	</select>
	
	<!-- 로그 정보  -->
	<select id="searchAllLog" parameterType="String" resultType="MeetingLogVO">
		select * from meetlog_tb where meet_title = #{meet_title}
	</select>
</mapper>